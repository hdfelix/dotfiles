export CLICOLOR=1
export LSCOLORS=Exfxcxdxbxegedabagacad
#export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx #another option on colors

###################
# Default Editor
###################

export EDITOR='vim'

# Run mvim in terminal mode instead of regular vim
# alias vi='mvim -v'
# alias vim='mvim -v'


###################
# Aliases
###################

alias tat='tat.sh'
alias tl='tmux list-sessions'
alias ll='ls -lahG'
# alias rr='clear && bundle exec rspec'
alias rr='clear && bin/rspec -fp --fail-fast spec'
# alias rr='clear && rspec -fp --fail-fast spec'
alias ra='clear && bin/rspec spec -fp --fail-fast'
alias gd='git diff --color-words'
alias rn='clear && bin/rspec --next-failure'
# alias pt='clear && parallel_rspec -fp --fail-fast spec'

# bash completion
if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi

# source /usr/local/git/contrib/completion/git-completion.bash
# GIT_PS1_SHOWDIRTYSTATE=true
# export PS1='[\u@mbp \w$(__git_ps1)]\$ '

###################
# EC2 CLI
###################
# home
# export EC2_HOME=/usr/local/ec2/ec2-api-tools-1.7.0.0
# path
# export PATH=$PATH:$EC2_HOME/bin

###################
# JAVA
###################
export JAVA_HOME=$(/usr/libexec/java_home)

###################
# Colors
###################
#tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

default_username='hectorfelix'

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 256)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

function git_info() {
# check if we're in a git repo
git rev-parse --is-inside-work-tree &>/dev/null || return

# quickest check for what branch we're on
branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

# check if it's dirty (via github.com/sindresorhus/pure)
dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

echo $WHITE" on "$PURPLE$branch$dirty
}

# Only show username/host if not default
function usernamehost() {
if [ $USER != "$default_username" ]; then echo "${MAGENTA}$USER ${WHITE}at ${ORANGE}$HOSTNAME $WHITEin "; fi
}

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash] hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash] \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\$(usernamehost)\[$GREEN\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"
# PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\[$BLUE\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"



###################
# Path
###################

export PATH=/usr/local/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"

eval "$(rbenv init -)"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

#HDF added for my own scripts
export PATH="$HOME/bin:$PATH"

if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
fi

if [ -f ~/.bashrc ]; then
  source ~/.bashrc
fi
