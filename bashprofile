export CLICOLOR=1
export LSCOLORS=Exfxcxdxbxegedabagacad
# export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx #another option on colors

###################
# Default Editor
###################

export EDITOR='vim'

###################
# Aliases
###################

# Run mvim in terminal mode instead of regular vim
alias vi='mvim -v'
alias vim='mvim -v'

alias tat='tat.sh'
alias tl='tmux list-sessions'
alias ll='ls -lahG'
# alias rr='clear && bundle exec rspec'
alias rr='clear && rubocop -DES && bin/rspec -fp --fail-fast spec'
# alias rr='clear && rspec -fp --fail-fast spec'
alias ra='clear && rubocop -DES && bin/rspec spec -fp --fail-fast'
alias gd='git diff --color-words'
alias rn='clear && bin/rspec --next-failure'
alias rt='clear && rubocop -DES && bundle exec rake rspec:all'
alias python=python3
# alias pt='clear && parallel_rspec -fp --fail-fast spec'

# bash completion
# if [ -f `brew --prefix`/etc/bash_completion ]; then
#   . `brew --prefix`/etc/bash_completion
# fi

[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
# source /usr/local/git/contrib/completion/git-completion.bash
# GIT_PS1_SHOWDIRTYSTATE=true
# export PS1='[\u@mbp \w$(__git_ps1)]\$ '

###################
# EC2 CLI
###################
# home
# export EC2_HOME=/usr/local/ec2/ec2-api-tools-1.7.0.0
# path
# export PATH=$PATH:$EC2_HOME/bin

###################
# JAVA
###################
# export JAVA_HOME=$(/usr/libexec/java_home)

###################
# Colors
###################
#tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

default_username='hectorfelix'

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 256)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

function git_info() {
# check if we're in a git repo
git rev-parse --is-inside-work-tree &>/dev/null || return

# quickest check for what branch we're on
branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

# check if it's dirty (via github.com/sindresorhus/pure)
dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

echo $WHITE" on "$PURPLE$branch$dirty
}

# Only show username/host if not default
function usernamehost() {
if [ $USER != "$default_username" ]; then echo "${MAGENTA}$USER ${WHITE}at ${ORANGE}$HOSTNAME $WHITEin "; fi
}

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash] hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash] \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\$(usernamehost)\[$GREEN\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"
# PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\[$BLUE\]\w\$(git_info)\[$WHITE\]\n\$ \[$RESET\]"



###################
# Path
###################

# export PATH=/usr/local/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin
export PATH=/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/go/bin:/usr/bin:/bin:/usr/sbin:/usr/local/sbin:/sbin
# rbenv
# export PATH="$HOME/.rbenv/bin:$PATH"

eval "$(rbenv init -)"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# AWS
export IO_REPO=756518171116.dkr.ecr.us-west-1.amazonaws.com/io-engage-event
#Postgres Operator
# server
export GOPATH=$HOME/odev
export GOBIN=$GOPATH/bin
export CO_NAMESPACE=default
export CO_CMD=kubectl
export COROOT=$GOPATH/src/github.com/crunchydata/postgres-operator
export CO_IMAGE_PREFIX=crunchydata
export CO_IMAGE_TAG=centos7-3.1
export CO_BASEOS=centos7
# export KUBECONFIG=~/.kube/config.io
export KUBECONFIG=~/.kube/config.io
export KOPS_STATE_STORE=s3://io-engage-cloud-state-store

[ -f ~/.kubectl-aliases ] && source ~/.kubectl_aliases

# Client
export CO_APISERVER_URL=https://127.0.0.1:8443
export PGO_CA_CERT=$COROOT/conf/apiserver/server.crt
export PGO_CLIENT_CERT=$COROOT/conf/apiserver/server.crt
export PGO_CLIENT_KEY=$COROOT/conf/apiserver/server.key

#HDF added for my own scripts
# token for io-jwt-plugin
export JWT_TOKEN='43dUe(rbxvboF4:oZDn6s}/bw#QcL}%a1EHXp^LIWAs:XN%y+O]{+g}#rUNW9U!43dUe(rbxvboF4:oZDn6s}/bw#QcL}%a1EHXp^LIWAs:XN%y+O]{+g}#rUNW9U!'
export PATH="$HOME/bin:$PATH"

# IO Engage
export STACKIFY_ENABLED=false
export STACKIFY_INSTANCE_ENV=dev
export STACKIFY_INSTANCE_NAME=hdf-local

if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
fi

export PATH="$(brew --prefix qt@5.5)/bin:$PATH"

if [ -f ~/.config/exercism/exercism_completion.bash ]; then
  . ~/.config/exercism/exercism_completion.bash
fi

if [ -f ~/.bashrc ]; then
  source ~/.bashrc
fi


complete -C aws_completer aws
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

HISTCONTROL="erasedups:ignorespace"
HISTIGNORE="history*"
HISTFILESIZE=100000
